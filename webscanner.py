import base64
import re
#Error handling 
import requests
from bs4 import BeautifulSoup

# Replace this with the URL of the website you want to scan
url = "https://www.webexotic.ca"

try:
    # Send an HTTP request to the website and retrieve the HTML content
    response = requests.get(url)
    html_content = response.text
except Exception as e:
    # If an exception is raised, print an error message and exit the script
    print(f"Error: Unable to access website ({e})")
    exit()

try:
    # Parse the HTML content using Beautiful Soup
    soup = BeautifulSoup(html_content, "html.parser")
except Exception as e:
    # If an exception is raised, print an error message and exit the script
    print(f"Error: Unable to parse HTML content ({e})")
    exit()

# Rest of the code goes here...



#-----------------------------
# Replace this with the URL of the website you want to scan
url = "https://www.webexotic.ca"

# Send an HTTP request to the website and retrieve the HTML content
response = requests.get(url)
html_content = response.text

# Parse the HTML content using Beautiful Soup
soup = BeautifulSoup(html_content, "html.parser")

# Check for base64 encoded strings in the HTML content
base64_pattern = r'(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?'
if re.search(base64_pattern, html_content):
    print("Possible malware found: base64 encoded string detected")

# Check for the presence of eval-like functions
eval_like_functions = ['setTimeout', 'setInterval', 'execScript', 'new Function']
for func in eval_like_functions:
    if func in html_content:
        print(f"Possible malware found: {func} function detected")

# Check for the presence of "unescape" function calls
if "unescape" in html_content:
    print("Possible malware found: unescape function detected")

# Check for links to known malicious websites
malicious_websites = ['malicious_website_1.com', 'malicious_website_2.com']
links = soup.find_all("a")
for link in links:
    href = link.get("href")
    if any(website in href for website in malicious_websites):
        print("Possible malware found: link to known malicious website detected")


# Check for the presence of JavaScript event handlers
event_handlers = ['onclick', 'onmouseover', 'onload']
for handler in event_handlers:
    if handler in html_content:
        print(f"Possible malware found: {handler} event handler detected")

# Check for the presence of suspicious cookies
if "suspicious_cookie_name" in response.cookies:
    print("Possible malware found: suspicious cookie detected")

# Check for the presence of specific suspicious cookies
if "suspicious_cookie_name" in response.cookies:
    # Check the value of the cookie
    if response.cookies["suspicious_cookie_name"] == "suspicious_cookie_value":
        print("Possible malware found: specific suspicious cookie detected")

# Check for the presence of hidden iframes or images that are loaded from known malicious websites
for img in soup.find_all("img", {"src": "malicious_website.com"}):
    if img.get("style") == "display:none":
        print("Possible malware found: hidden image from known malicious website detected")

print("Scan complete")
